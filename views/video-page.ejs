<%- include ("includes/header") %>

<div class="container-fluid pb-0">
 <div class="video-block section-padding">
  <div class="row">
   <div class="col-md-8">
    <div class="single-video-left">
     <div class="single-video">
      <video
      id="videoPlayer"
      class="video-js"
      controls
      width="760"
      height="400"
      preload="auto"
      data-setup="{}"
      poster="<%= video.thumbnail %>">
      <source src="<%= video.filePath %>" type="video/mp4" />
        <source src="<%= video.filePath %>" type="video/webm" />
        <track src="subtitles.vtt" kind="subtitles" srclang="en" label="English" default>
          <p class="vjs-no-js">
            To view this video please enable JavaScript, and consider upgrading to a
            web browser that
            <a href="https://videojs.com/html5-video-support/" target="_blank"
            >supports HTML5 video</a
            >
          </p>
        </video>
      </div>
      <div style="margin-top: 10px;">
      <select id="playback-speed" onchange="changePlaybackSpeed()">
        <option value="0.5">0.5x</option>
        <option value="1" selected>1x</option>
        <option value="1.5">1.5x</option>
        <option value="2">2x</option>
      </select>
      <select id="video-quality" onchange="changeVideoQuality()">
        <option value="360p">360p</option>
        <option value="480p">480p</option>
        <option value="720p">720p</option>
        <option value="1080p">1080p</option>
      </select>
    </div>
        <div class="single-video-title box mb-3">
          <h2 id="videoTitleHeading">
          <%= video.title %>
        </h2>
        <% if (isLogin) { %>    <div style="display: flex;align-items: center;"> <button id="like-btn" class="btn " style="height: 50px; background-color: #20b2aa;width: 65px; border-radius: 8px;margin-right: 10px;border: none;color: white;" onclick="toggleLike()">Like</button>
   <button id="dislike-btn" class="btn " style="height: 50px;background-color: coral; border-radius: 8px;border: none;color: white;margin-right: 10px;" onclick="toggleDislike()">Dislike</button>
         
          
          <button id="capture-btn" style="margin-right: 10px;" class="btn btn-success btn-lg mb-2">
            <i class="fas fa-camera"></i> Capture
          </button>
          <button id="share-btn" style="margin-right: 10px;" class="btn btn-primary btn-lg">
            <i class="fas fa-share-alt"></i> Share Gmail </button>
          </button></div>   <% } %>
          <p class="mb-0"><i class="fas fa-eye"></i> <%= video.views %> views</p>
        </p>
        <label for="cut-start-time">Start Time</label>
        <input id="cut-start-time" type="text" placeholder="00:00:00"></p>
        <label for="cut-end-time">End Time</label>
        <input id="cut-end-time" type="text" placeholder="00:00:00">
        <button id="playButton" onclick="cutVideo()">
          <i class="fas fa-play"></i> Play Video
        </button>
        </p>
        <% if (isLogin) { %> <button id="exportButton" class="btn btn-outline-primary <%= url == '/update-video' ? 'active' : '' %>" onclick="downloadVideo()" style="margin-left: 20px; border-radius: 5px;">DownLoad</button><% } %>
      
    </div>
<link href="https://unpkg.com/video.js/dist/video-js.min.css" rel="stylesheet">
<script src="https://unpkg.com/video.js/dist/video.min.js"></script>

<script>
  var player = videojs('videoPlayer');

var cutStartTime, cutEndTime;

player.on('timeupdate', function() {
  var currentTime = player.currentTime();
  if (cutStartTime && currentTime < cutStartTime) {
    player.currentTime(cutStartTime);
  }
  if (cutEndTime && currentTime >= cutEndTime) {
    player.pause();
    cutStartTime = null;
    cutEndTime = null;
    recorder.stop();
  }
});

player.on('ended', function() {
  player.currentTime(cutStartTime);
  player.play();
  recorder.start();
});

var stream = player.captureStream();
var recorder = new MediaRecorder(stream);

function cutVideo() {
  var startInput = document.getElementById('cut-start-time').value;
  var endInput = document.getElementById('cut-end-time').value;
  var timeRegex = /^([0-9]{2}):([0-9]{2}):([0-9]{2})$/;
  var startParts = timeRegex.exec(startInput);
  var endParts = timeRegex.exec(endInput);

  if (!startParts || (!endParts && endInput !== '')) {
    alert('Invalid start or end time format');
    return;
  }

  var startParts = startInput.split(':');
  var endParts = endInput.split(':');

  cutStartTime = parseInt(startParts[0]) * 3600 + parseInt(startParts[1]) * 60 + parseFloat(startParts[2]);
  cutEndTime = parseInt(endParts[0]) * 3600 + parseInt(endParts[1]) * 60 + parseFloat(endParts[2]);

  if (cutStartTime >= cutEndTime) {
    alert('Start time must be less than end time');
    return;
  }

  if (cutStartTime < 0 || cutEndTime < 0 || cutEndTime > player.duration()) {
    alert('Invalid start or end time');
    return;
  } else {
    player.currentTime(cutStartTime);
    player.play();
    recorder.start();
  }
}


</script>   
<script>
  function changeVideoQuality() {
  // Lấy đối tượng video từ trang web
  const video = document.getElementById('videoPlayer');

  // Lấy giá trị chất lượng video từ menu thả xuống
  const quality = document.getElementById('video-quality').value;

  // Lấy đường dẫn video mới tương ứng với chất lượng
  const newSrc = `<%= video.filePath %>?quality=${quality}`;

  // Cập nhật thuộc tính 'src' của đối tượng video
  video.src = newSrc;

  // Tự động phát lại video sau khi thay đổi chất lượng
  video.play();
}

</script>
  
<script>
  function changePlaybackSpeed() {
  var player = videojs('videoPlayer');
  var newSpeed = document.getElementById('playback-speed').value;
  player.playbackRate(newSpeed);
}

</script>   
<script>
   const shareBtn = document.getElementById('share-btn');
shareBtn.addEventListener('click', sendVideoLinkByEmail);
function sendVideoLinkByEmail() {
  // get the video element and the video source URL
  const videoElement = document.getElementById('videoPlayer');
  const videoUrl = videoElement.querySelector('source').src;
  
  // create the Gmail link with the video URL as the body
  const gmailUrl = `https://mail.google.com/mail/?view=cm&fs=1&to=&su=Video%20Link&body=${videoUrl}`;
  
  // open the Gmail link in a new tab
  window.open(gmailUrl, '_blank');
}

</script>

<script>
    let isLiked = localStorage.getItem("isLiked") === "true";
    let isDisliked = localStorage.getItem("isDisliked") === "true";

    function toggleLike() {
      const likeButton = document.getElementById("like-btn");
      const dislikeButton = document.getElementById("dislike-btn");

      if (isLiked) {
        isLiked = false;
        localStorage.setItem("isLiked", "false");
        likeButton.style.color = "black"; // unmark the like button
      } else {
        if (isDisliked) {
          isDisliked = false;
          localStorage.setItem("isDisliked", "false");
          dislikeButton.style.color = "black"; // unmark the dislike button
        }
        isLiked = true;
        localStorage.setItem("isLiked", "true");
        likeButton.style.color = "blue"; // mark the like button
      }
    }

    function toggleDislike() {
      const likeButton = document.getElementById("like-btn");
      const dislikeButton = document.getElementById("dislike-btn");

      if (isDisliked) {
        isDisliked = false;
        localStorage.setItem("isDisliked", "false");
        dislikeButton.style.color = "black"; // unmark the dislike button
      } else {
        if (isLiked) {
          isLiked = false;
          localStorage.setItem("isLiked", "false");
          likeButton.style.color = "black"; // unmark the like button
        }
        isDisliked = true;
        localStorage.setItem("isDisliked", "true");
        dislikeButton.style.color = "red"; // mark the dislike button
      }
    }

    // Update button colors on page load
    if (isLiked) {
      document.getElementById("like-btn").style.color = "blue";
    } else if (isDisliked) {
      document.getElementById("dislike-btn").style.color = "red";
    }

</script>
<script>
  function downloadVideo() {
      var video = document.getElementById('videoPlayer');
      var source = video.getElementsByTagName('source')[0];
      var videoUrl = source.src;
      var videoName = videoUrl.split('/').pop();

      var anchor = document.createElement('a');
      anchor.href = videoUrl;
      anchor.download = videoName;
      anchor.click();
    }
</script>
<script>
    const video = document.querySelector('video');
    const captureBtn = document.querySelector('#capture-btn');

    captureBtn.addEventListener('click', () => {
      const canvas = document.createElement('canvas');
      canvas.width = video.videoWidth;
      canvas.height = video.videoHeight;

      const ctx = canvas.getContext('2d');
      ctx.drawImage(video, 0, 0, canvas.width, canvas.height);

      const img = document.createElement('img');
      img.src = canvas.toDataURL();

      const link = document.createElement('a');
      link.download = 'download.png';
      link.href = img.src;
      document.body.appendChild(link);
      link.click();
      document.body.removeChild(link);
    });
</script>

<style>
  #playButton {
    background-color: #36f43f;
    color: white;
    padding: 10px 20px;
    font-size: 16px;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    margin-right: 10px;
  }

  #playButton:hover {
    background-color: #e53935;
  }

  #playButton i {
    margin-right: 5px;
  }

  #capture-btn {
    border-radius: 4px;
    margin-right: 10px;
  }
  #share-btn {
    border-radius: 4px;
  }
  #capture-btn {
    background-color: #4CAF50;
    border: none;
    color: white;
    padding: 12px 24px;
    text-align: center;
    text-decoration: none;
    display: inline-block;
    font-size: 16px;
    margin: 4px 2px;
    cursor: pointer;
    border-radius: 4px;
  }
</style>

       
</div>

<div class="single-video-author box mb-3">
  <div class="float-right">

    <input type="hidden" id="videoId" value="<%= video._id %>">
    <input type="hidden" id="userId" value="<%= user._id %>">
    <input type="hidden" id="category" value="<%= video.category %>">
    <input type="hidden" id="videoTitle" value="<%= video.title %>">
    <input type="hidden" id="watch" value="<%= video.watch %>">
    <input type="hidden" id="filePath" value="<%= video.filePath %>">
    <input type="hidden" id="minutes" value="<%= video.minutes %>">
    <input type="hidden" id="seconds" value="<%= video.seconds %>">
    <input type="hidden" id="thumbnail" value="<%= video.thumbnail %>">

</div>
<img class="img-fluid" style="object-fit: cover;" src="<%= video.user.image %>" onerror="this.src = 'public/img/user_placeholder.jpg'" alt="">
<p><a href="/channel?c=<%= video.user._id %>"><strong><%= video.user.first_name + " " + video.user.last_name %></strong></a> <span title="" data-placement="top" data-toggle="tooltip" data-original-title="Verified"><i class="fas fa-check-circle text-success"></i></span></p>
<small>Published on <%
var createdAt = new Date(video.createdAt);
var date = createdAt.getDate() + "";
%>
<%= date.padStart(2, "0") + " " + months[createdAt.getMonth()] + ", " + createdAt.getFullYear() %>
</small>
</div>
<div class="single-video-info-content box mb-3">
  <h6>Category :</h6>
  <p><%= video.category %></p>
  <h6>Description :</h6>
  <p><%= video.description %></p>
  <h6>Tags :</h6>
  <p class="tags mb-0">
   <%
   tags = video.tags.split(",");
   tags.forEach (function (tag) {
     tag = tag.trim();
     %>
     <span><%= tag %>,</span>
     <% }) %>
   </p>
 </div>

 <script type="text/javascript">
  function postComment() {
   var inputComment = document.getElementById("input-comment").value;

   var ajax = new XMLHttpRequest();
   ajax.open("POST", "/do-comment", true);
   ajax.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");

   ajax.onreadystatechange = function () {
    if (this.readyState == 4 && this.status == 200) {
     var response = JSON.parse(this.responseText);

     var html = "";
     html += '<div class="row">';
     html += '<div class="col-md-2">';
     html += '<img style="border-radius: 50%;" src="' + response.user.image + '" class="img-fluid" onerror="this.src = \'public/img/user_placeholder.jpg\'">';
     html += '</div>';

     html += '<div class="col-md-10">';
     html += '<h3>' + response.user.first_name + ' ' + response.user.last_name + '</h3>';
     html += '<p>' + response.comment + '</p>';
     html += '</div>';
     html += '</div>';
     document.getElementById("comments").innerHTML = html + document.getElementById("comments").innerHTML;
     document.getElementById("input-comment").value = "";
   }
 };

 var videoId = document.getElementById("videoId").value;
 ajax.send("comment=" + inputComment + "&videoId=" + videoId);
}



function postReply(node) {
  var commentId = node.getAttribute("data-comment-id");
  var reply = node.previousElementSibling.querySelector("textarea").value;

  var ajax = new XMLHttpRequest();
  ajax.open("POST", "/do-reply", true);
  ajax.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");

  ajax.onreadystatechange = function () {
    if (this.readyState == 4 && this.status == 200) {
      var response = JSON.parse(this.responseText);

      var html = "";
      html += '<div class="row">';
      html += '<div class="col-md-2">';
      html += '<img style="border-radius: 50%;" src="' + response.user.image + '" class="img-fluid" onerror="this.src = \'public/img/user_placeholder.jpg\'">';
      html += '</div>';

      html += '<div class="col-md-10">';
      html += '<h3>' + response.user.first_name + ' ' + response.user.last_name + '</h3>';
      html += '<p>' + response.reply + '</p>';
      html += '</div>';
      html += '</div>';
      document.getElementById("replies").innerHTML = html + document.getElementById("replies").innerHTML;
      node.previousElementSibling.querySelector("textarea").value = "";
    }
  };

  ajax.send("commentId=" + commentId + "&reply=" + reply);
}

function createReplyNode(node) {
  var commentId = node.getAttribute("data-comment-id");
  var html = ""
  html += '<div class="row">';
  html += '<div class="col-sm-12">';
  html += '<div class="form-group">';
  html += '<label class="control-label">Write reply</label>';
  html += '<textarea class="form-control border-form-control" id="input-comment"></textarea>';
  html += '</div>';

  html += '<button type="button" class="btn btn-outline-secondary" data-comment-id="' + commentId + '" onclick="postReply(this);">Post</button>';
  html += '</div>';
  html += '</div>';
  node.innerHTML = html;
  node.removeAttribute("onclick");
  node.style.width = "100%";
}
</script>

<div class="single-video-info-content box mb-3">
  <h6>Comments :</h6>
  <% if (isLogin) { %>
  <div class="row">
    <div class="col-sm-12">
     <div class="form-group">
      <label class="control-label">Write comment</label>
      <textarea class="form-control border-form-control" id="input-comment"></textarea>
    </div>

    <button type="button" class="btn btn-outline-secondary" onclick="postComment();">Post</button>
  </div>
</div>
<% } %>

<style type="text/css">
 #comments {
  margin-top: 20px;
}
#comments .row {
  margin-top: 20px;
}
#replies {
  max-height: 300px;
  overflow-y: scroll;
  overflow-x: hidden;
}
/* width */
#replies::-webkit-scrollbar {
 width: 10px;
}
/* Track */
#replies::-webkit-scrollbar-track {
 background: #f1f1f1;
}
/* Handle */
#replies::-webkit-scrollbar-thumb {
 background: #888;
}
/* Handle on hover */
#replies::-webkit-scrollbar-thumb:hover {
 background: #555;
}
</style>

<div id="comments">
 <% if (video.comments) { video.comments = video.comments.reverse(); video.comments.forEach(function (comment) { %>
 <div class="row" id="comment-<%= comment._id %>">
   <div class="col-md-2">
    <img style="width: 100px; border-radius: 50%;" src="<%= comment.user.image %>" class="img-fluid" onerror="this.src = 'public/img/user_placeholder.jpg'">
  </div>

  <div class="col-md-10">
    <h3><%= comment.user.first_name + " " + comment.user.last_name %></h3>
    <p><%= comment.comment %></p>
    <div id="replies" style="margin-top: 50px;">
      <% if (comment.replies) { comment.replies = comment.replies.reverse(); comment.replies.forEach(function (reply) { %>
      <div class="row">
        <div class="col-md-2">
         <img style="width: 100px; border-radius: 50%; height: 100px; object-fit: cover;" src="<%= comment.user.image %>" class="img-fluid" onerror="this.src = 'public/img/user_placeholder.jpg'">
       </div>

       <div class="col-md-10">
        <h3><%= reply.user.first_name + " " + reply.user.last_name %></h3>
        <p><%= reply.reply %></p>
      </div>
    </div>
    <% }) } %>
  </div>
  <% if (isLogin) { %>
  <div style="float: right; cursor: pointer;" class="text-info" onclick="createReplyNode(this);" data-comment-id="<%= comment._id %>">
   Reply
 </div>
 <% } %>
</div>
</div>
<% }) } %>
</div>
</div>

</div>
</div>

<div class="col-md-4">
  <div class="single-video-right">
   <div class="row">
    <div class="col-md-12" style="padding-left: 0px; padding-right: 0px;">
     <div class="adblock">
      <div class="img">
       Google AdSense<br>
       336 x 280
     </div>
   </div>
 </div>

<div id="related-videos" class="col-md-12">

</div>

</div>
</div>
</div>
</div>
</div>
</div>
<!-- /.container-fluid -->

<script type="text/javascript">
  var category = document.getElementById("category").value;
  var videoId = document.getElementById("videoId").value;

  $(function () {
    var ajax = new XMLHttpRequest();
    ajax.open("GET", "/get-related-videos?category=" + category + "&videoId=" + videoId, true);

    ajax.onreadystatechange = function () {
      if (this.readyState == 4 && this.status == 200) {
       var videos = JSON.parse(this.responseText);
       var html = "";

       for (var a = 0; a < videos.length; a++) {
         

      var createdAt = new Date(videos[a].createdAt);
      var date = createdAt.getDate() + "";
      date = date.padStart(2, "0") + " " + months[createdAt.getMonth()] + ", " + createdAt.getFullYear()

      html += '<div class="row">';
      html += '<div class="col-md-5">';
      html += '<a class="play-icon" href="watch?v=' + videos[a].watch + '"><i class="fas fa-play-circle"></i></a>';
      // html += '<a href="watch?v=' + videos[a].watch + '"><video style="width: 150px; height: 100px; object-fit: cover;" src="' + videos[a].filePath + '"></video></a>';
      html += '<a href="watch?v=' + videos[a].watch + '"><img style="width: 150px; height: 100px; object-fit: cover;" src="' + videos[a].thumbnail + '"></a>';
      html += '<div class="time" style="right: 5px; bottom: 12px;">' + videos[a].minutes + ":" + videos[a].seconds + '</div>';
      html += '</div>';

      html += '<div class="col-md-7">';
      html += '<div class="video-title">';
      html += '<a href="watch?v=' + videos[a].watch + '">' + videos[a].title + '</a>';
      html += '</div>';

      html += '<div class="video-page text-success">';
      html += videos[a].category + '  <a title="' + videos[a].title + '" data-placement="top" data-toggle="tooltip" href="javascript:void(0);" data-original-title="Verified"><i class="fas fa-check-circle text-success"></i></a>';
      html += '</div>';

      html += '<div class="video-view">';
      html += videos[a].views + ' views &nbsp;<i class="fas fa-calendar-alt"></i> ' + date;
      html += '</div>';
      html += '</div>';
      html += '</div>';
    }

    document.getElementById("related-videos").innerHTML = html;

    var videos = document.getElementById("related-videos").querySelectorAll("video");
    for (var a = 0; a < videos.length; a++) {
     videos[a].currentTime = 10;
   }
 }
};

ajax.send();
});
</script>

<%- include ("includes/footer") %>
